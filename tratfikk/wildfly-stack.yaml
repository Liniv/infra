version: "3.7"
services:
  # sslcerts:
  #   image: prologic/mksslcrt
  #   command: "zhenihov-co7"
  #   volumes:
  #     - /nfsshares/traefik_data/sslcerts:/ssl
  #   deploy:
  #     restart_policy:
  #       condition: none
  #     replicas: 1
  #   networks:
  #     mtis-swarm-network:

  load-balancer:
    # depends_on:
    #   - sslcerts  
    image: traefik
    command:
      - "--api"
      - "--docker"
      # - "--debug=true"
      # - "--logLevel=DEBUG"
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--insecureSkipVerify=true"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # - ./traefik:/etc/traefik
      # - /nfsshares/traefik_data/sslcerts:/ssl
      # - /nfsshares/traefik_data/data:/data
    networks:
      mtis-swarm-network:
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - 'node.role == manager'
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
  wildfly:
     image: "10.90.2.111:5000/mtis/wildfly:latest"
     volumes:
       - /etc/localtime:/etc/localtime:ro
       - /nfsshares/wildfly_data/jasper_data:/opt/jboss/jasper
       - /nfsshares/wildfly_data/records_data:/opt/jboss/records
       - ./configs/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml:ro
    #  ports:
      #  - "8443:8443"
     networks:
       mtis-swarm-network:
     deploy:
       mode: replicated
       replicas: 2
       update_config:
         delay: 2s
     labels:
       - "traefik.enable=true"
      #  - "traefik.backend=wildfly"
       - "traefik.frontend.rule=PathPrefix:/mtis-web-billing/"
      #  - "traefik.frontend.rule=AddPrefix:/mtis-web-billing/;PathPrefixStrip:/mtis-web-billing"
       - "traefik.port=8443"
       - "traefik.protocol=https"
       - "traefik.frontend.entryPoints=https"
       - "traefik.backend.loadbalancer.stickiness=true"
      #  - "traefik.backend.loadbalancer.swarm=true"
      #  - "traefik.backend.loadbalancer.method=drr"

networks:
  mtis-swarm-network:
